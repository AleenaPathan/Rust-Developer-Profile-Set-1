fn longest_common_prefix(strs: &[String]) -> String {
    if strs.is_empty() {
        return String::new(); 
    }

    let mut prefix = strs[0].clone(); 

    for s in strs.iter().skip(1) {
       
        while !s.starts_with(&prefix) {
            prefix.pop(); 
            if prefix.is_empty() {
                return String::new(); 
            }
        }
    }

    prefix
}

fn main() {
    let strings = vec![
        String::from("crew"),
        String::from("crop"),
         String::from("crash"),
          String::from("crazy"),
           String::from("cramp"),
            String::from("cruel"),
        String::from("crowd"),
    ];
    println!("Longest common prefix: {}", longest_common_prefix(&strings));
}
